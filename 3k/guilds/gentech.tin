#class {gentech} {open}

#var guild gentech


#NOP genset hpbar HP:$hp$ SP:$sp$ PU:$pu$ CPC:$cpc$ E:$enemy$$nl$G:$gexp$/$g2n$($g2n-pct$%) RC:$rc$ Bias:$bias$ TS:$tslide$($reset-pct$%)$nl$EField[$efield$ min] EDNA[$edna$] Synth[$synthorg$] EFF:$gen-eff$|$tech-eff$ HG: $hypergen$($hypergent$)
#act {HP:%d/%d SP:%d/%d PU:%d/%d(%d) CPC:%d/%d E:%w} {
	#var {my[hp][current]}		{%1};
	#var {my[hp][max]}		{%2};
	#var {my[sp][current]}		{%3};
	#var {my[sp][max]}		{%4};
	#var {my[gp1][current]}		{%5};
	#var {my[gp1][max]}		{%6};
	#var {my[gp2][current]}		{%7};
	#var {gentech[cpc][current]}	{%8};
	#var {gentech[cpc][max]}	{%9};
	#var ehealth			{%10}
}

#act {G:%d/%d(%d\%) RC:%d Bias:( %d\% | %d\% ) TS:%d/%d(%d\%)} {
	#var {gentech[gxp][prev]}	{$gentech[gxp][num]};
	#var {gentech[rc][prev]}	{$gentech[rc][num]};
	#var {gentech[gxp][num]}	{%1};
	#var {gentech[gxp][tnl]}	{%2};
	#var {gentech[gxp][per]}	{%3};
	#var {gentech[rc][num]}		{%4};
	#var {gentech[bias][atk]}	{%5};
	#var {gentech[bias][def]}	{%6};
	#var {gentech[ts][current]}	{%7};
	#var {gentech[ts][max]}		{%8};
	#var {gentech[reset]}		{%9};
	#math {gentech[gxp][last]}	{$gentech[gxp][num] - $gentech[gxp][prev]};
	#math {gentech[rc][last]}	{$gentech[rc][num] - $gentech[rc][prev]}
}

#act {EField[%d %w] EDNA[%d %w] Synth[%w] EFF:%d|%d HG: %d(%d %w)} {
	#var {gentech[efield][num]}	{%1};
	#var {gentech[efield][unit]}	{%2};
	#var {gentech[edna][num]}	{%3};
	#var {gentech[edna][unit]}	{%4};
	#var {gentech[synthorg]}	{%5};
	#var {gentech[geneff]}		{%6};
	#var {gentech[techeff]}		{%7};
	#var {gentech[hg][num]}		{%8};
	#var {gentech[hg][time]}	{%9};
	#var {gentech[hg][unit]}	{%10};
	update_status
}

#var recently_reclaimed no
#alias {update_status} {
	#NOP Adrenaline Surge to heal HP;
	#if {$my[hp][current] < $my[hp][max] * .8} {
		#delay {surge} {#send !surge} {0.1}
	};
	#NOP Meditate to heal SP;
	#if {$my[sp][current] < $my[sp][max] * .5} {
		#delay {mediate} {#send !meditate} {0.1}
	};
	#NOP Reactivate EDNA;
	#if {$gentech[edna][num] == 0} {
		#delay {edna} {#send !edna} {0.1}
	};
	#NOP Recharge PU from SPU;
	#if {$my[gp1][max] - $my[gp1][current] > $my[gp2][current] &&
	     $my[gp2][current] > 0} {
		#delay {recharge} {#send !recharge} {0.1}
	};
	#NOP Refill SPU from corpses if empty;
	#if {$my[gp2][current] == 0 && "$recently_reclaimed" == "no"} {
		#if {$corpses[cooler] > 0} {
			#delay {use_corpse} {
				#send !uncooler corpse;
				#send !reclaim;
				#var recently_reclaimed yes
			} {0.1}
		}; #elseif {$corpses[inventory] > 0} {
			#delay {use_corpse} {
				#send !drop corpse;
				#send !reclaim;
				#var recently_reclaimed yes
			} {0.1}
		}; #elseif {$corpses[coffin] > 0} {
			#delay {use_corpse} {
				#send !unwrap;
				#send !reclaim;
				#var recently_reclaimed yes
			} {0.1}
		}; #elseif {$corpses[freezer] > 0} {
			#delay {use_corpse} {
				#send !deslab;
				#send !reclaim;
				#var recently_reclaimed yes
			} {0.1}
		}
	};
	#if {"$recently_reclaimed" == "yes"} {
		#delay {reclaim} {#var recently_reclaimed no} {2}
	};

	#NOP Build HP Bars;
        #if {"$cooler" == "on" || $corpses[cooler] > 0} {
                #format {sb1_cooler} {%+2s} {$corpses[cooler]};
                #var {sb1_cooler} { CL:<130>$sb1_cooler<088>}
        } {
                #var {sb1_cooler} {}
        };
        #if {"$freezer" == "on" || $corpses[freezer] > 0} {
                #format {sb2_freezer} {%+2s} {$corpses[freezer]};
                #var {sb2_freezer} { FZ:<130>$sb2_freezer<088>}
        } {
                #var {sb2_freezer} {}
        };
	#switch {"$gentech[synthorg]"} {
		#case {"LA"}		{#var synthorg {<118>LA<088>}};
		#case {"SH"}		{#var synthorg {<138>SH<088>}};
		#case {"SO"}		{#var synthorg {<258>SO<088>}};
		#case {"GR"}		{#var synthorg {<168>GR<088>}};
	};
	#math	{gxp[last]}		{$gentech[gxp][last] + $gentech[rc][last]};
	#math	{gxp[rnds]}		{$gentech[gxp][tnl] / $gentech[gxp][last]};
	#if	{$gxp[rnds] < 30}	{
		#var gxp[time]		{<128>${gxp[rnds]}<228>s<088>}
	}; #elseif {$gxp[rnds] < 1800}	{
		#math {gxp[min]}	{$gxp[rnds] / 30};
		#math {gxp[sec]}	{$gxp[rnds] % 30};
		#var  {gxp[time]}	{<128>${gxp[min]}<228>m <128>${gxp[sec]}<228>s<088>}
	}; #elseif {$gxp[rnds] < 43200}	{
		#math {gxp[hr]}		{$gxp[rnds] / 1800};
		#math {gxp[min]}	{$gxp[rnds] % 1800 / 30};
		#math {gxp[sec]}	{$gxp[rnds] % 1800 % 30};
		#var  {gxp[time]}	{<128>${gxp[hr]}<228>h <128>${gxp[min]}<228>m <128>${gxp[sec]}<228>s<088>}
	}; #else {
		#math {gxp[day]}	{$gxp[rnds] / 43200};
		#math {gxp[hr]}		{$gxp[rnds] % 43200 / 1800};
		#math {gxp[min]}	{$gxp[rnds] % 43200 % 1800 / 30};
		#math {gxp[sec]}	{$gxp[rnds] % 43200 % 1800 % 30};
		#var  {gxp[time]}	{<128>${gxp[day]}<228>d <128>${gxp[hr]}<228>h <128>${gxp[min]}<228>m <128>${gxp[sec]}<228>s<088>}
	};
	#var	{my[hp][graph]}		{@graph{$my[hp][current];$my[hp][max]}};
	#var	{my[sp][graph]}		{@graph{$my[sp][current];$my[sp][max]}};
	#var	{my[gp1][graph]}	{@graph{$my[gp1][current];$my[gp1][max]}};
	#var	{my[gp2][graph]}	{@graph{$my[gp2][current];$my[gp2][max]}};
	#var	{gentech[gxp][graph]}	{@graph{$gentech[gxp][per];100}};
	#var	{enemy[graph]}		{@graph{$enemy[hp];100}};
	#var	{cpc}			{@colscale{$gentech[cpc][current];$gentech[cpc][max]}};
	#var	{cpc_max}		{<128>$gentech[cpc][max]<088>};
	#math	{gentech[gxp][cost]}	{$gentech[gxp][tnl]*100/$gentech[gxp][per]};
	#var	{gxp_col}		{<268>$gentech[gxp][num]<088>};
	#var	{g2n}			{@colscale{$gentech[gxp][tnl];$gentech[gxp][cost]}};
	#var	{gxp_per}		{@colscale{$gentech[gxp][per];100}};
	#var	{reset}			{@colscale{$gentech[reset];100}};
	#var	{geneff}		{@colscale{$gentech[geneff];100}};
	#var	{techeff}		{@colscale{$gentech[techeff];100}};
	#format {hp}			{%+4s} {@colscale{$my[hp][current];$my[hp][max]}};
	#format {hp_max}		{%+4s} {<128>$my[hp][max]<088>};
	#format {sp}			{%+4s} {@colscale{$my[sp][current];$my[sp][max]}};
	#format {sp_max}		{%+4s} {<128>$my[sp][max]<088>};
	#format {pu}			{%+4s} {@colscale{$my[gp1][current];$my[gp1][max]}};
	#format {pu_max}		{%+4s} {<128>$my[gp1][max]<088>};
	#format {spu}			{%+4s} {<128>$my[gp2][current]<088>};
	#format {gxp_last}		{%+3s} {$gentech[gxp][last]};
	#format {rc_last}		{%+3s} {$gentech[rc][last]};
	#format {tot_last}		{%+3s} {$gxp[last]};
	#format {gxp_time}		{%-15s} {$gxp[time]};
	#format {ehealth}		{%+8s} {@colscale{$enemy[hp];100}\%};
        #format {corpses[inventory]}    {%+2s} {$corpses[inventory]};
        #format {corpses[truck]}	{%+2s} {$corpses[truck]};
        #format {corpses[coffin]}	{%+2s} {$corpses[coffin]};
        #format {corpses[freezer]}	{%+2s} {$corpses[freezer]};
	#showme {HP:${hp}/${hp_max} SP:${sp}/${sp_max} PU:${pu}/${pu_max}(${spu}) GL:${gxp_last} RL:${rc_last} TL:${tot_last} ${gxp_time} IC:<138>${corpses[inventory]}<088>${sb1_cooler}} {-4};
	#showme {H:${my[hp][graph]} S:${my[sp][graph]} PU:${my[gp1][graph]} SU:${my[gp2][graph]} G: ${gentech[gxp][graph]} E:${enemy[graph]}  CF:<138>${corpses[coffin]}<088>${sb2_freezer}} {-3};
	#showme {$mip[gline][1]  $mip[gline][2]} {-6}
}

/* Substitutes to colorize hpbar */
#NOP Using 'colorized' variables established in update_status
#SUB {HP:%d/%d SP:%d/%d PU:%d/%d(%d) CPC:%d/%d E:} {HP:$hp/$hp_max SP:$sp/$sp_max PU:$pu/${pu_max}($spu) CPC:$cpc/$cpc_max E:}
#SUB {G:%d/%d(%d\%) RC:%d Bias:( %d\% | %d\% ) TS:%d/%d(%d\%)} {G:$gxp_col/$g2n($gxp_per\%) RC:$gentech[rc][num] Bias:( $gentech[bias][atk]\% | $gentech[bias][def]\% ) TS:$gentech[ts][current]/$gentech[ts][max]($reset\%)}
#SUB {EField[%d %w] EDNA[%d %w] Synth[%w] EFF:%d|%d HG: %d(%d %w)} {EField[${gentech[efield][num]} $gentech[efield][unit]] EDNA[$gentech[edna][num] $gentech[edna][unit]] Synth[$synthorg] EFF:$geneff|$techeff HG: $gentech[hg][num]($gentech[hg][time] $gentech[hg][unit])}

#alias {corpsetrig} {
	slab;
	wrap;
	get coins
}

#act {dealt the killing blow} {corpsetrig}

#class {gentech} {close}
